version: 0.2

env:
  shell: bash

# batch:
  # fast-fail: false | true
  # build-list:
  # build-matrix:
  # build-graph:
        

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Entered the install phase...
      # - yum update -y
      - python -m pip install --upgrade pip
      - pip install flake8 pytest
      - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - flake8 . --count --show-source --statistics
      - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - pytest test/*
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      # - docker login -u User -p $LOGIN_PASSWORD
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 981878686511.dkr.ecr.us-east-2.amazonaws.com
    finally:
      - echo This always runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`ww
      - docker build -t dev_ops_training .
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - docker tag dev_ops_training:latest 981878686511.dkr.ecr.us-east-2.amazonaws.com/dev_ops_training:latest
      - docker push 981878686511.dkr.ecr.us-east-2.amazonaws.com/dev_ops_training:latest
      - echo Build completed on `date`

# reports:
#   arn:aws:codebuild:your-region:your-aws-account-id:report-group/report-group-name-1:
#     files:
#       - "**/*"
#     base-directory: 'target/tests/reports'
#     discard-paths: no
#   reportGroupCucumberJson:
#     files:
#       - 'cucumber/target/cucumber-tests.xml'
#     discard-paths: yes
#     file-format: CUCUMBERJSON # default is JUNITXML
# artifacts:
#   files:
#     - target/messageUtil-1.0.jar
#   discard-paths: yes
#   secondary-artifacts:
#     artifact1:
#       files:
#         - target/artifact-1.0.jar
#       discard-paths: yes
#     artifact2:
#       files:
#         - target/artifact-2.0.jar
#       discard-paths: yes
# cache:
#   paths:
#     - '/root/.m2/**/*'